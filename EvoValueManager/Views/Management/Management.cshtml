@using EvoCharacterManager.Models.ViewModels
@model ManagementPageViewModel

@{
    ViewBag.Title = "Vezetés/Fejlesztés";
}

<h2>Vezetés/Fejlesztés</h2>

<div class="evo-flex">
    @using (Html.BeginForm("Assign", "Management", FormMethod.Post))
    {
        @Html.DropDownListFor(m => m.SelectedAssignedId, (SelectList)Model.SelectableAssignedValues,
            new { @class = "form-control evo-margin evo-dropdown", onchange = "this.form.submit();" })
    }

    @using (Html.BeginForm("CharacterSelection", "Management", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.SelectedAssignedId)
        @Html.DropDownListFor(m => m.SelectedCharacterId, (SelectList)Model.SelectableCharacters, "Válassz egy csapattagot",
            new { @class = "form-control evo-margin evo-dropdown", onchange = "this.form.submit();" })
    }

    @if (Model.SelectableChallenges != null)
    {
        @using (Html.BeginForm("ChallengeSelection", "Management", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.SelectedAssignedId)
            @Html.HiddenFor(m => m.SelectedCharacterId)
            @Html.DropDownListFor(m => m.SelectedChallengeId, (SelectList)Model.SelectableChallenges, "Válassz egy kihívást",
                new { @class = "form-control evo-margin evo-dropdown", onchange = "this.form.submit();" })
        }
    }
</div>

@if (Model.SelectedCharacter != null && Model.SelectedChallenge != null)
{
    <div class="evo-details-margin">
        <h3>Elvárások</h3>
        @foreach (var trait in new[]
                  {
                      new { Label = "Fejlődés:", Property = "Growth" },
                      new { Label = "Gondoskodás:", Property = "Care" },
                      new { Label = "Jelenlét:", Property = "Presence" },
                      new { Label = "Megbízhatóság:", Property = "Trust" },
                      new { Label = "Merészség:", Property = "Bravery" }
                  })
        {
            <div class="evo-flex">
                @{
                var requiredTraitValue = Convert.ToInt32(Model.SelectedChallenge.GetType().GetProperty("Required" + trait.Property)!.GetValue(Model.SelectedChallenge));
                var characterTraitValue = Convert.ToInt32(Model.SelectedCharacter.GetType().GetProperty(trait.Property)!.GetValue(Model.SelectedCharacter));

                if (requiredTraitValue != 0)
                {
                <p class="evo-character-label">
                    <strong>@trait.Label</strong>
                </p>

                <p style="margin-left: 10px;">
                    @characterTraitValue
                    @requiredTraitValue
                </p>

                <p style="margin-left: 10px; font-weight: bold; color: red">
                    @(characterTraitValue >= requiredTraitValue ? "" : "!!!")
                </p>
                }
                }
            </div>
        }
    </div>

    <div class="evo-details-margin">
        <h3>Fejlődési lehetőségek</h3>
        @foreach (var trait in new[]
                  {
                      new { Label = "Fejlődés:", Property = "Growth" },
                      new { Label = "Gondoskodás:", Property = "Care" },
                      new { Label = "Jelenlét:", Property = "Presence" },
                      new { Label = "Megbízhatóság:", Property = "Trust" },
                      new { Label = "Merészség:", Property = "Bravery" }
                  })
        {
            <div class="evo-flex">
                @{
                var gainableTraitValue = Convert.ToInt32(Model.SelectedChallenge.GetType().GetProperty("Gainable" + trait.Property)!.GetValue(Model.SelectedChallenge));
                var characterTraitValue = Convert.ToInt32(Model.SelectedCharacter.GetType().GetProperty(trait.Property)!.GetValue(Model.SelectedCharacter));

                if (gainableTraitValue != 0)
                {
                <p class="evo-character-label">
                    <strong>@trait.Label</strong>
                </p>
                <p style="margin-left: 10px;">
                    @characterTraitValue
                    +@gainableTraitValue
                    (<span style="color: green">
                @(characterTraitValue + gainableTraitValue)
            </span>)
                </p>
                }
                }
            </div>
        }
    </div>

    @using (Html.BeginForm("ManageChallenge", "Management", FormMethod.Post))
    {
        <div class="evo-details-margin">
            @Html.HiddenFor(m => m.SelectedAssignedId)
            @Html.HiddenFor(m => m.SelectedCharacterId)
            @Html.HiddenFor(m => m.SelectedChallengeId)
            <button type="submit" class="btn btn-primary">
                @(Model.SelectedAssignedId == 1 ? "Kihívás felvétele" : "Lezárás")
            </button>
        </div>
    }
}