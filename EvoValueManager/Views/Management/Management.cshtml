@using EvoCharacterManager.Models.ViewModels
@using EvoValueManager.Models.Shared
@model ManagementPageViewModel

@{
    ViewBag.Title = "Vezetés/Fejlesztés";
}

<h2>Vezetés/Fejlesztés</h2>

<div class="evo-flex">
    @using (Html.BeginForm("Assign", "Management", FormMethod.Post))
    {
        @Html.DropDownListFor(m => m.SelectedAssignedId, (SelectList)Model.SelectableAssignedValues,
            new { @class = "form-control evo-margin evo-dropdown", onchange = "this.form.submit();" })
    }

    @using (Html.BeginForm("CharacterSelection", "Management", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.SelectedAssignedId)
        @Html.DropDownListFor(m => m.SelectedCharacterId, (SelectList)Model.SelectableCharacters, "Válassz egy csapattagot",
            new { @class = "form-control evo-margin evo-dropdown", onchange = "this.form.submit();" })
    }

    @if (Model.SelectableChallenges != null)
    {
        @using (Html.BeginForm("ChallengeSelection", "Management", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.SelectedAssignedId)
            @Html.HiddenFor(m => m.SelectedCharacterId)
            @Html.DropDownListFor(m => m.SelectedChallengeId, (SelectList)Model.SelectableChallenges, "Válassz egy kihívást",
                new { @class = "form-control evo-margin evo-dropdown", onchange = "this.form.submit();" })
        }
    }
</div>

@if (Model.SelectedCharacter != null && Model.SelectedChallenge != null)
{
    <div class="evo-details-margin">
        <h3>Elvárások</h3>
        @foreach (var trait in Constants.Traits.Values)
        {
            <div class="evo-flex">
                @{
                    var requiredTraitValue = Convert.ToInt32(Model.SelectedChallenge.GetType().GetProperty("Required" + trait.Property)!.GetValue(Model.SelectedChallenge));
                    var characterTraitValue = Convert.ToInt32(Model.SelectedCharacter.GetType().GetProperty(trait.Property)!.GetValue(Model.SelectedCharacter));

                    if (requiredTraitValue != 0)
                    {
                        <table>
                            <tr>
                                <td>
                                    <div class="evo-traits-image-small">
                                        <img src="@Url.Content(trait.ImageSmall)" alt="@trait.Title" title="@trait.Title"/>
                                    </div>
                                </td>
                                <td style="padding-left: 10px;">
                                    <p>
                                        @(characterTraitValue) @(requiredTraitValue)
                                        <span style="color: red; font-weight: bold">
                                            @(characterTraitValue >= requiredTraitValue ? "" : "!!!")
                                        </span>
                                    </p>
                                </td>
                            </tr>
                        </table>
                    }
                }
            </div>
        }
    </div>

    <div class="evo-details-margin">
        <h3>Fejlődési lehetőségek</h3>
        @foreach (var trait in Constants.Traits.Values)
        {
            <div class="evo-flex">
                @{
                    var gainableTraitValue = Convert.ToInt32(Model.SelectedChallenge.GetType().GetProperty("Gainable" + trait.Property)!.GetValue(Model.SelectedChallenge));
                    var characterTraitValue = Convert.ToInt32(Model.SelectedCharacter.GetType().GetProperty(trait.Property)!.GetValue(Model.SelectedCharacter));

                    @if (gainableTraitValue != 0)
                    {
                        <table>
                            <tr>
                                <td>
                                    <div class="evo-traits-image-small">
                                        <img src="@Url.Content(trait.ImageSmall)" alt="@trait.Title" title="@trait.Title"/>
                                    </div>
                                </td>
                                <td style="padding-left: 10px;">
                                    <p>
                                        @(characterTraitValue) +@(gainableTraitValue)
                                        (
                                        <span style="color: green">
                                            @(characterTraitValue + gainableTraitValue)
                                        </span> )
                                    </p>
                                </td>
                            </tr>
                        </table>
                    }
                }
            </div>
        }
    </div>

    @using (Html.BeginForm("ManageChallenge", "Management", FormMethod.Post))
    {
        <div class="evo-details-margin">
            @Html.HiddenFor(m => m.SelectedAssignedId)
            @Html.HiddenFor(m => m.SelectedCharacterId)
            @Html.HiddenFor(m => m.SelectedChallengeId)

            <div class="form-group">
                <div style="display: flex; align-items: center;">
                    <h3>Részletek</h3>
                    @if (TempData["UpdateSuccess"] != null)
                    {
                        <span class="text-success" style="margin-left: 10px;">
                            @TempData["UpdateSuccess"]
                        </span>
                    }
                </div>

                <textarea id="Details" name="Details" rows="5" class="form-control">@Model.Details</textarea>
            </div>

            <button type="submit" name="action" value="ManageChallenge" class="btn btn-primary" style="margin-top: 10px">
                @(Model.SelectedAssignedId == 1 ? "Kihívás felvétele" : "Lezárás")
            </button>

            @if (!string.IsNullOrEmpty(Model.Details) || Model.SelectedAssignedId != 1)
            {
                <button type="submit" name="action" value="UpdateDetails" class="btn btn-secondary" style="margin-top: 10px">
                    Frissítés
                </button>
            }
        </div>
    }
}