@using EvoCharacterManager.Models.ViewModels
@using EvoValueManager.Models.Shared
@model ChallengePageViewModel

@{
    ViewBag.Title = "Kihívások";
}

<h2>Kihívások</h2>

<div>
    @using (Html.BeginForm("ChallengeSelection", "Challenge", FormMethod.Post))
    {
        @Html.DropDownListFor(m => m.SelectedChallengeId, (SelectList)Model.SelectableChallenges, "Válassz egy kihívást",
            new { @class = "form-control evo-margin evo-dropdown", onchange = "this.form.submit();" })
    }
    @using (Html.BeginForm("AddChallenge", "Challenge", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.SelectedChallengeId)
        @Html.HiddenFor(m => m.AddChallenge)
        <button type="submit" class="evo-margin btn btn-primary">@(Model.AddChallenge ? "-" : "+")</button>
    }
</div>

@if (Model.SelectedChallenge != null)
{
    <div class="evo-details-margin">
        <table>
            <tr>
                <td style="text-align: center">
                    <strong>Cím:</strong>
                </td>
                <td>@Model.SelectedChallenge.Title</td>
            </tr>
            @foreach (var trait in Constants.Traits.Values)

            {
                var traitValue = Model.SelectedChallenge.GetType().GetProperty($"Required{trait.Property}")!.GetValue(Model.SelectedChallenge);
                <tr>
                    <td>
                        <div class="evo-traits-image-small">
                            <img src="@Url.Content(trait.ImageSmall)" alt="@trait.Title" title="@trait.Title"/>
                        </div>
                    </td>
                    <td>@traitValue</td>
                </tr>
            }
        </table>
    </div>

    <button type="button" onclick="toggleDiv()" class="btn btn-primary" style="margin-top: 10px">Szerkesztés</button>

    <div id="editChallenge" style="display:none;">
        @using (Html.BeginForm("SaveChallengeChange", "Challenge", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.SelectedChallengeId)
            <div class="evo-details-margin">
                <div class="evo-flex">
                    <p class="evo-challenge-label">
                        <strong>Cím:</strong>
                    </p>
                    @Html.TextBoxFor(m => Model.SelectedChallenge.Title, new
                    {
                        @class = "evo-margin"
                    })
                </div>
                <div class="evo-flex">
                    <p class="evo-challenge-label">
                        <strong>Elvárt Fejlődés:</strong>
                    </p>
                    @Html.TextBoxFor(m => Model.SelectedChallenge.RequiredGrowth, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
                </div>

                <div class="evo-flex">
                    <p class="evo-challenge-label">
                        <strong>Elvárt Gondoskodás:</strong>
                    </p>
                    @Html.TextBoxFor(m => Model.SelectedChallenge.RequiredCare, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
                </div>
                <div class="evo-flex">
                    <p class="evo-challenge-label">
                        <strong>Elvárt Jelenlét:</strong>
                    </p>
                    @Html.TextBoxFor(m => Model.SelectedChallenge.RequiredPresence, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
                </div>
                <div class="evo-flex">
                    <p class="evo-challenge-label">
                        <strong>Elvárt Megbízhatóság:</strong>
                    </p>
                    @Html.TextBoxFor(m => Model.SelectedChallenge.RequiredTrust, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
                </div>
                <div class="evo-flex">
                    <p class="evo-challenge-label">
                        <strong>Elvárt Merészség:</strong>
                    </p>
                    @Html.TextBoxFor(m => Model.SelectedChallenge.RequiredBravery, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
                </div>
                <button type="submit" class="btn btn-primary">Mentés</button>
            </div>
        }
    </div>
}

@if (Model.AddChallenge)
{
    @using (Html.BeginForm("SaveNewChallenge", "Challenge", FormMethod.Post))
    {
        <div class="evo-details-margin">
            <div class="evo-flex">
                <p class="evo-challenge-label">
                    <strong>Név:</strong>
                </p>
                @Html.TextBoxFor(m => m.NewChallenge.Title, new { @class = "evo-margin" })
            </div>
            <div class="evo-flex">
                <p class="evo-challenge-label">
                    <strong>Elvárt Fejlődés</strong>
                </p>
                @Html.TextBoxFor(m => m.NewChallenge.RequiredGrowth, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
            </div>
            <div class="evo-flex">
                <p class=" evo-challenge-label">
                    <strong>Elvárt Gondoskodás</strong>
                </p>
                @Html.TextBoxFor(m => m.NewChallenge.RequiredCare, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
            </div>
            <div class="evo-flex">
                <p class=" evo-challenge-label">
                    <strong>Elvárt Jelenlét</strong>
                </p>
                @Html.TextBoxFor(m => m.NewChallenge.RequiredPresence, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
            </div>
            <div class="evo-flex">
                <p class=" evo-challenge-label">
                    <strong>Elvárt Megbízhatóság</strong>
                </p>
                @Html.TextBoxFor(m => m.NewChallenge.RequiredTrust, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
            </div>
            <div class="evo-flex">
                <p class=" evo-challenge-label">
                    <strong>Elvárt Merészség</strong>
                </p>
                @Html.TextBoxFor(m => m.NewChallenge.RequiredBravery, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "0",
                        @max = "100"
                    })
            </div>
            <button type="submit" class="btn btn-primary">Mentés</button>
        </div>
    }
}