@using EvoCharacterManager.Models.ViewModels
@using EvoValueManager.Models.Shared
@model CharacterPageViewModel

@{
    ViewBag.Title = "Csapattag kezelő";
}

<h2>Csapattag kezelő</h2>

<div class="evo-flex">
    @using (Html.BeginForm("CharacterSelection", "Character", FormMethod.Post))
    {
        @Html.DropDownListFor(m => m.SelectedCharacterId, (SelectList)Model.SelectableCharacters, "Válassz egy csapattagot",
            new { @class = "form-control evo-margin evo-dropdown evo-dropdown-select", onchange = "this.form.submit();" })
        @Html.HiddenFor(m => m.AddCharacter)
    }

    @using (Html.BeginForm("AddCharacter", "Character", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.SelectedCharacterId)
        @Html.HiddenFor(m => m.AddCharacter)
        <button type="submit" class="evo-margin btn btn-primary">@(Model.AddCharacter ? "-" : "+")</button>
    }
</div>

@if (Model.SelectedCharacter != null)
{
    <div class="evo-details-margin">
        <table>
            <tr>
                <td style="text-align: center">
                    <strong>Név:</strong>
                </td>
                <td class="evo-table-values">@Model.SelectedCharacter.Name</td>
            </tr>
            @foreach (var trait in Constants.Traits.Values)
            {
                var traitValue = Model.SelectedCharacter.GetType().GetProperty(trait.Property)!.GetValue(Model.SelectedCharacter);
                <tr>
                    <td>
                        <div class="evo-traits-image-small">
                            <img src="@Url.Content(trait.ImageSmall)" alt="@trait.Title" title="@trait.Title"/>
                        </div>
                    </td>
                    <td class="evo-table-values">@traitValue</td>
                </tr>
            }
        </table>
    </div>
}

@if (Model.AddCharacter)
{
    @using (Html.BeginForm("SaveNewCharacter", "Character", FormMethod.Post))
    {
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="evo-details-margin">
            <div class="evo-flex">
                <p class="evo-character-label">
                    <strong>Név:</strong>
                </p>
                @Html.TextBoxFor(m => m.NewCharacter.Name, new
                    {
                        @class = "evo-margin",
                        @required = "required",
                        @minlength = "3",
                        @placeholder = "Add meg a nevet"
                    }
                )
            </div>
            <div class="evo-flex">
                <p class="evo-character-label">
                    <strong>Fejlődés:</strong>
                </p>
                @Html.TextBoxFor(m => m.NewCharacter.Growth, new
                {
                    @class = "evo-margin",
                    @type = "number",
                    @min = "1",
                    @max = "100",
                })
            </div>
            <div class="evo-flex">
                <p class="evo-character-label">
                    <strong>Gondoskodás:</strong>
                </p>
                @Html.TextBoxFor(m => m.NewCharacter.Care, new
                {
                    @class = "evo-margin",
                    @type = "number",
                    @min = "1",
                    @max = "100",
                })
            </div>
            <div class="evo-flex">
                <p class="evo-character-label">
                    <strong>Jelenlét:</strong>
                </p>
                @Html.TextBoxFor(m => m.NewCharacter.Presence, new
                {
                    @class = "evo-margin",
                    @type = "number",
                    @min = "1",
                    @max = "100",
                })
            </div>
            <div class="evo-flex">
                <p class="evo-character-label">
                    <strong>Megbízhatóság:</strong>
                </p>
                @Html.TextBoxFor(m => m.NewCharacter.Trust, new
                {
                    @class = "evo-margin",
                    @type = "number",
                    @min = "1",
                    @max = "100",
                })
            </div>
            <div class="evo-flex">
                <p class="evo-character-label">
                    <strong>Merészség:</strong>
                </p>
                @Html.TextBoxFor(m => m.NewCharacter.Bravery, new
                {
                    @class = "evo-margin",
                    @type = "number",
                    @min = "1",
                    @max = "100",
                })
            </div>
            <button type="submit" class="btn btn-primary">Mentés</button>
        </div>
    }
}

@if (Model.SelectedCharacter != null)
{
    <div class="evo-details-margin">
        <button type="button" onclick="toggleDiv()" class="btn btn-primary" style="margin-top: 10px">Szerkesztés
        </button>

        <div id="editChallenge" style="display:none;">
            @using (Html.BeginForm("SaveCharacterChange", "Character", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.SelectedCharacterId)
                <div class="evo-flex">
                    <p class="evo-character-label">
                        <strong>Név:</strong>
                    </p>
                    @Html.TextBoxFor(m => m.SelectedCharacter.Name, new
                        {
                            @class = "evo-margin",
                            @required = "required",
                            @minlength = "3",
                            @placeholder = "Add meg a nevet"
                        }
                    )
                </div>
                <div class="evo-flex">
                    <p class="evo-character-label">
                        <strong>Fejlődés:</strong>
                    </p>
                    @Html.TextBoxFor(m => m.SelectedCharacter.Growth, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "1",
                        @max = "100",
                    })
                </div>
                <div class="evo-flex">
                    <p class="evo-character-label">
                        <strong>Gondoskodás:</strong>
                    </p>
                    @Html.TextBoxFor(m => m.SelectedCharacter.Care, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "1",
                        @max = "100",
                    })
                </div>
                <div class="evo-flex">
                    <p class="evo-character-label">
                        <strong>Jelenlét:</strong>
                    </p>
                    @Html.TextBoxFor(m => m.SelectedCharacter.Presence, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "1",
                        @max = "100",
                    })
                </div>
                <div class="evo-flex">
                    <p class="evo-character-label">
                        <strong>Megbízhatóság:</strong>
                    </p>
                    @Html.TextBoxFor(m => m.SelectedCharacter.Trust, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "1",
                        @max = "100",
                    })
                </div>
                <div class="evo-flex">
                    <p class="evo-character-label">
                        <strong>Merészség:</strong>
                    </p>
                    @Html.TextBoxFor(m => m.SelectedCharacter.Bravery, new
                    {
                        @class = "evo-margin",
                        @type = "number",
                        @min = "1",
                        @max = "100",
                    })
                </div>
                <button type="submit" class="btn btn-primary">Mentés</button>
            }
                
        </div>
    </div>
}